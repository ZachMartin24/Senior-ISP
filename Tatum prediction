from nba_api.stats.endpoints import playergamelog
from nba_api.stats.library.parameters import SeasonAll
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Jayson Tatum's player ID
tatum_id = '1628369'

# Get Jayson Tatum's game logs for all seasons
tatum_gamelog = playergamelog.PlayerGameLog(player_id=tatum_id, season=SeasonAll.all)
tatum_gamelog_df = tatum_gamelog.get_data_frames()[0]

# Select relevant features and target variable
X = tatum_gamelog_df[['MIN', 'FGA', 'FT_PCT', 'AST']].dropna()  # Example features
y = tatum_gamelog_df['PTS'].dropna()  # Target variable

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize and train a linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model's performance
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)

# Select Tatum's last 5 games
tatum_last_5_games = tatum_gamelog_df.head(5)

# Calculate the average of Tatum's statistics from his last 5 games
average_stats_last_5_games = tatum_last_5_games[['MIN', 'FGA', 'FT_PCT', 'AST']].mean()

# Example game features for the upcoming game (using Tatum's average stats from his last 5 games)
upcoming_game_features = [average_stats_last_5_games.values.tolist()]

# Make a prediction for Tatum's points scored in the upcoming game
predicted_pts = model.predict(upcoming_game_features)
print("Predicted Points Scored in Upcoming Game:", predicted_pts[0])
